{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["filteredTodosList","value","todos","filter","todo","title","toLocaleLowerCase","includes","trim","TodoList","todoList","modalActive","query","option","activeTaskId","filteredTodos","completed","className","map","Fragment","id","isDone","classNames","type","onClick","TodoFilter","handleQuery","handleOption","useState","setQuery","selectedOption","setSelectedOption","onChange","event","newOption","target","booleanOption","placeholder","newValue","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeModal","user","setUser","useEffect","userId","href","email","name","App","loading","setLoadning","list","setList","task","setTask","setOption","catch","error","console","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05bf36d0.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype ListOfTodos = {\n  todoList: Todo[],\n  modalActive: (todo: Todo) => void;\n  query: string;\n  option: boolean | null;\n  activeTaskId: number | null;\n};\n\nconst filteredTodosList = (value: string, todos: Todo[]) => {\n  return todos.filter(todo => todo.title\n    .toLocaleLowerCase().includes(value.trim().toLocaleLowerCase()));\n};\n\nexport const TodoList: React.FC<ListOfTodos>\n = ({\n   todoList, modalActive, query, option, activeTaskId,\n }) => {\n   const isDoneStyle = (isDone: boolean) => {\n     return classNames({\n       'has-text-danger': !isDone,\n       'has-text-success': isDone,\n     });\n   };\n\n   let filteredTodos: Todo[] = [];\n\n   if (option === null) {\n     filteredTodos = filteredTodosList(query, todoList);\n   } else if (option) {\n     filteredTodos\n       = filteredTodosList(query, todoList)\n         .filter(todo => todo.completed === true);\n   } else {\n     filteredTodos\n      = filteredTodosList(query, todoList)\n         .filter(todo => todo.completed === false);\n   }\n\n   return (\n     <table className=\"table is-narrow is-fullwidth\">\n       <thead>\n         <tr>\n           <th>#</th>\n           <th>\n             <span className=\"icon\">\n               <i className=\"fas fa-check\" />\n             </span>\n           </th>\n           <th>Title</th>\n           <th> </th>\n         </tr>\n       </thead>\n\n       <tbody>\n         {filteredTodos.map(todo => (\n           <React.Fragment key={todo.id}>\n             <tr data-cy=\"todo\" className=\"\">\n               <td className=\"is-vcentered\">{todo.id}</td>\n               {todo.completed\n                 ? (\n                   <td className=\"is-vcentered\">\n                     <span className=\"icon\" data-cy=\"iconCompleted\">\n                       <i className=\"fas fa-check\" />\n                     </span>\n                   </td>\n                 )\n                 : <td className=\"is-vcentered\" />}\n               <td className=\"is-vcentered is-expanded\">\n                 <p className={isDoneStyle(todo.completed)}>{todo.title}</p>\n               </td>\n               <td className=\"has-text-right is-vcentered\">\n                 <button\n                   data-cy=\"selectButton\"\n                   className=\"button\"\n                   type=\"button\"\n                   onClick={() => modalActive(todo)}\n                 >\n                   <span className=\"icon\">\n                     {activeTaskId === todo.id ? (\n                       <i className=\"far fa-eye-slash\" />\n                     ) : (\n                       <i className=\"far fa-eye\" />\n                     )}\n                   </span>\n                 </button>\n               </td>\n             </tr>\n           </React.Fragment>\n         ))}\n       </tbody>\n     </table>\n   );\n };\n","import React, { SyntheticEvent, useState } from 'react';\n\n type Props = {\n   handleQuery: (value: string) => void;\n   handleOption: (value: boolean | null) => void;\n };\nexport const TodoFilter: React.FC<Props> = ({ handleQuery, handleOption }) => {\n  const [query, setQuery] = useState('');\n  const [selectedOption, setSelectedOption] = useState<string>('all');\n\n  const handleQueryValue = (event: SyntheticEvent<HTMLInputElement>) => {\n    const newValue = (event.target as HTMLInputElement).value.trim();\n\n    setQuery(newValue);\n    handleQuery(newValue);\n  };\n\n  const handelClearQuery = () => {\n    setQuery('');\n    handleQuery('');\n  };\n\n  const handleOptions = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newOption = event.target.value;\n\n    setSelectedOption(newOption);\n\n    let booleanOption: boolean | null = null;\n\n    switch (newOption) {\n      case 'all':\n        booleanOption = null;\n        break;\n      case 'active':\n        booleanOption = false;\n        break;\n      case 'completed':\n        booleanOption = true;\n        break;\n      default:\n        booleanOption = null;\n    }\n\n    handleOption(booleanOption);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={handleOptions}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryValue}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handelClearQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, closeModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-damger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [loading, setLoadning] = useState(true);\n  const [list, setList] = useState<Todo[]>([]);\n  const [task, setTask] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState<boolean | null>(null);\n\n  useEffect(() => {\n    setLoadning(true);\n\n    getTodos()\n      .then((todos) => {\n        setList(todos);\n        setLoadning(false);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.error('Something bad happened!', error);\n        setLoadning(false);\n      });\n  }, []);\n\n  const modalActive = (todo: Todo) => {\n    setTask(todo);\n  };\n\n  const closeModal = () => {\n    setTask(null);\n  };\n\n  const handleQuery = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleOption = (value: boolean | null) => {\n    setOption(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter handleQuery={handleQuery} handleOption={handleOption} />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              <TodoList\n                todoList={list}\n                modalActive={(todo) => modalActive(todo)}\n                query={query}\n                option={option}\n                activeTaskId={task?.id || null}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {task && <TodoModal todo={task} closeModal={closeModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}